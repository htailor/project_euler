/******************************************************************************************

	Problem 2 - Even Fibonacci numbers
	
	Each new term in the Fibonacci sequence is generated by adding the previous two
	terms. By starting with 1 and 2, the first 10 terms will be:

		1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

	By considering the terms in the Fibonacci sequence whose values do not exceed four
	million, find the sum of the even-valued terms.

*******************************************************************************************/

#include <iostream>

int Answer1(const int &x){

	int Ha = 1;
	int Hb = 1;

	int value = Ha + Hb;
	int sum = 0;
	
	while(value < x){

		if(value % 2 == 0){
			sum = sum + value;
		}

		Ha = Hb;
		Hb = value;
		value = Ha + Hb;
	}
	
	return sum;
}

int Answer2(const int &x){

	int Ha = 2;
	int Hb = 8;

	int value = Hb;
	int sum = Ha;
	
	while(value < x){

		sum = sum + value;
		value = 4*Hb + Ha;

		Ha = Hb;
		Hb = value;
	}
	
	return sum;
}


int main(int argc, char* argv[]){

	std::cout << "Even Fibonacci numbers" << std::endl;
	std::cout << "======================" << std::endl;

	int upper_bound = 4000000;

	std::cout << "Answer: " << Answer1(upper_bound) << std::endl;
	std::cout << "Answer: " << Answer2(upper_bound) << std::endl;

	return 0;
}
